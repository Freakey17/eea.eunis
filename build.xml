<?xml version="1.0"?>
<!-- ANT script for the EUNIS project -->
<!-- (c) 2002 - 2005 EEA - European Environment Agency. All rights reserved. -->
<!--- Date: 7-07-2002 -->

<project name="eunis" basedir="." default="deploy">
  <!-- Initialize the environment used inside the script -->
  <property environment="osEnv"/>
  <property name="tomcat" value="${osEnv.TOMCAT_HOME}" description="Tomcat home dir(on Linux is where webapps resides). Environment TOMCAT_HOME must be set." />
  <property name="java.home" value="${osEnv.JAVA_HOME}" description="Sun JDK home dir. Environment JAVA_HOME must be set." />

  <property name="3rdpartyDir" value="3rdparty" description="3rd party libraries dir" />
  <property name="srcDir" value="src" description="Source directory" />
  <property name="classesSrcDir" value="src/classes" description="Java classes dir" />

  <property name="buildDir" value= "build"/>

  <property name="deployDir" location="${tomcat}/webapps/eunis" description="Path to where application will be deployed" />
  <property name="deployLibDir" value="${tomcat}/webapps/eunis/WEB-INF/lib"/>

  <property name="confDir" location="conf" description="Dir where configuration files are located" />

  <!-- Define the basic classpath -->
  <path id="app_classpath">
    <fileset dir="${3rdpartyDir}">
      <include name="**/*.jar"/>
      <include name="**/*.zip"/>
    </fileset>
    <pathelement path="." />
    <pathelement path="conf"/>
    <pathelement path="${classesSrcDir}"/>
  </path>

  <target name="init" description="Creates and set up the initial dir structure and sets up environment.">
    <tstamp>
      <format property="timeStamp" pattern="d-MMM-yyy_hh-mm" locale="en"/>
    </tstamp>
    <mkdir dir="${buildDir}" description="Directory where Java classes are compiled"/>
    <mkdir dir="${deployDir}"/>
    <mkdir dir="${deployDir}/downloads"/>
    <mkdir dir="${deployDir}/WEB-INF"/>
    <mkdir dir="${deployDir}/WEB-INF/lib"/>
    <mkdir dir="${deployDir}/temp"/>
    <mkdir dir="${deployDir}/temp/cache"/>
    <mkdir dir="${deployDir}/temp/no-cache"/>
    <mkdir dir="${deployDir}/upload"/>
    <mkdir dir="${deployDir}/images/species"/>
    <mkdir dir="${deployDir}/images/habitats"/>
    <mkdir dir="${deployDir}/images/sites"/>
    <mkdir dir="${deployDir}/gis"/>
    <mkdir dir="${deployDir}/tutorials"/>

    <!-- Used only for JSP Compiler -->
    <!--
    <mkdir dir="${buildDir}/jspc"/>
    <mkdir dir="${buildDir}/jspc/ro"/>
    <mkdir dir="${buildDir}/jspc/ro/finsiel"/>
    <mkdir dir="${buildDir}/jspc/ro/finsiel/eunis"/>
    <mkdir dir="${buildDir}/jspc/ro/finsiel/eunis/servlet"/>
    -->
  </target>

  <target name="compile" depends="init" description="Compile Java classes and build JAR files">
    <javac srcdir="${classesSrcDir}" nowarn="true" deprecation="false" debug="true" destdir="${buildDir}">
      <classpath refid="app_classpath" />
    </javac>
    <!-- Build the jrf.jar from sources -->
    <jar jarfile="${deployLibDir}/jrf.jar">
      <fileset dir="${buildDir}">
        <include name="net/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/jrf-extras.jar">
      <fileset dir="${buildDir}">
        <include name="org/exolab/javasource/**/*.class"/>
        <include name="org/vmguys/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-web.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/admin/**/*.class"/>
        <include name="ro/finsiel/eunis/auth/**/*.class"/>
        <include name="ro/finsiel/eunis/backtrail/**/*.class"/>
        <include name="ro/finsiel/eunis/session/**/*.class"/>
        <include name="ro/finsiel/eunis/formBeans/**/*.class"/>
        <include name="ro/finsiel/eunis/related_reports/**/*.class"/>
        <include name="ro/finsiel/eunis/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-search.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/search/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-utilities.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/utilities/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-exceptions.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/exceptions/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-factsheet.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/factsheet/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-jrf.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/jrfTables/**/*.class"/>
      </fileset>
    </jar>
    <jar jarfile="${deployLibDir}/eunis-reports.jar">
      <fileset dir="${buildDir}">
        <include name="ro/finsiel/eunis/reports/**/*.class"/>
      </fileset>
    </jar>
  </target>

  <target name="compile-jsp" depends="init, compile" description="Compile the JSP files in servlet, generate XML additional descriptor">
    <!-- Compile the JSPs in servlets -->
    <!--    <taskdef classname="org.apache.jasper.JspC" name="jasper2">
    <classpath>
    <pathelement location="${java.home}/lib/tools.jar"/>
    <fileset dir="${tomcat}/server/lib">
    <include name="*.jar"/>
    </fileset>
    <fileset dir="${tomcat}/common/lib">
    <include name="*.jar"/>
    </fileset>
    <path refid="app_classpath"/>
    </classpath>
    </taskdef>
    <jasper2 verbose="0"
    package="ro.finsiel.eunis.servlet"
    uriroot="${srcDir}"
    webXmlFragment="${distDir}/WEB-INF/generated_web.xml"
    outputDir="${buildDir}/jspc/ro/finsiel/eunis/servlet" />
    <javac srcdir="${buildDir}/jspc" nowarn="true" deprecation="false" debug="true" destdir="${buildDir}/jspc">
    <classpath>
    <pathelement location="${java.home}/lib/tools.jar"/>
    <fileset dir="${tomcat}/server/lib">
    <include name="*.jar"/>
    </fileset>
    <fileset dir="${tomcat}/common/lib">
    <include name="*.jar"/>
    </fileset>
    <fileset dir="${distDir}/WEB-INF/lib">
    <include name="*.jar"/>
    </fileset>
    <path refid="app_classpath"/>
    </classpath>
    </javac>
    <jar jarfile="${distDir}/WEB-INF/lib/jsp-servlets.jar">
    <fileset dir="${buildDir}/jspc">
    <include name="**/*.class"/>
    </fileset>
    </jar>
    -->
  </target>

  <!-- Deploy the dist directory into Tomcat -->
  <target name="deploy" depends="compile" description="Deploy the application">
    <!-- Copy the JSP files -->
    <copy todir="${deployDir}">
      <fileset dir="${srcDir}">
        <include name="**/*.jsp"/>
        <include name="**/*.xml"/>
        <include name="**/*.txt"/>
      </fileset>
    </copy>
    <!-- Copy CSS files -->
    <copy todir="${deployDir}/css">
      <fileset dir="${srcDir}/css">
        <include name="**/*.css"/>
      </fileset>
    </copy>
    <!-- Copy images -->
    <copy todir="${deployDir}/images">
      <fileset dir="${srcDir}/images">
        <include name="**/*.jpg"/>
        <include name="**/*.JPG"/>
        <include name="**/*.gif"/>
        <include name="**/*.png"/>
      </fileset>
    </copy>
    <!-- Copy JavaScript files -->
    <copy todir="${deployDir}/script">
      <fileset dir="${srcDir}/script"/>
    </copy>
    <!-- Copy tutorial files -->
    <copy todir="${deployDir}/tutorials">
      <fileset dir="${srcDir}/tutorials">
        <include name="**/*.swf"/>
      </fileset>
    </copy>
    <!-- Copy necessary jars -->
    <copy todir="${deployDir}/WEB-INF/lib">
      <fileset dir="${3rdpartyDir}">
        <include name="**/*.jar"/>
        <exclude name="servlet.jar"/>
      </fileset>
    </copy>
    <copy todir="${deployDir}/gis">
      <fileset dir="${srcDir}/gis"/>
    </copy>

    <copy tofile="${deployDir}/WEB-INF/classes/jrf.properties.${timeStamp}" file="3rdparty/conf/jrf.properties"/>
    <copy tofile="${deployDir}/WEB-INF/classes/log4j.properties.${timeStamp}" file="3rdparty/conf/log4j.properties"/>
    <copy file="${confDir}/web.xml" tofile="${deployDir}/WEB-INF/web.xml.${timeStamp}"/>

    <!--<copy tofile="${deployDir}/WEB-INF/classes/jrf.properties" file="3rdparty/conf/jrf.properties"/>-->
    <!--<copy tofile="${deployDir}/WEB-INF/classes/log4j.properties" file="3rdparty/conf/log4j.properties"/>-->
    <!--<copy file="${confDir}/web.xml" tofile="${deployDir}/WEB-INF/web.xml"/>-->

    <!-- Copy downloadable files (one by one because we do not want to fail the build process if file does not exists) -->
    <!--<copy file="downloads/eunis.zip" tofile="${deployDir}/downloads/eunis.zip" failonerror="false"/>-->

    <echo message=""/>
    <echo message=""/>
    <echo message="*************************** IMPORTANT! Please READ *******************************"/>
    <echo message="Build done. The following configuration files were not overriden:"/>
    <echo message="${deployDir}/WEB-INF/classes/jrf.properties"/>
    <echo message="${deployDir}/WEB-INF/classes/log4j.properties"/>
    <echo message="${deployDir}/WEB-INF/web.xml"/>
    <echo message="You must manually merge old settings to new config files and replace old files."/>
    <echo message="This step is MANDATORY. New files might include new parameters needed by application."/>
    <echo message="New files are timestamped with prefix: .${timeStamp}."/>
    <echo message="*************************** IMPORTANT! Please READ *******************************"/>
  </target>

  <!-- Deploy the dist directory into Tomcat -->
  <target name="deploy-jsp" description="Deploy only JSP">
    <!-- Copy the JSP files -->
    <copy todir="${deployDir}">
      <fileset dir="${srcDir}">
        <include name="**/*.jsp"/>
        <include name="**/*.xml"/>
        <include name="**/*.txt"/>
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
      </fileset>
    </copy>
    <!-- Copy JavaScript files -->
    <copy todir="${deployDir}/script">
      <fileset dir="${srcDir}/script"/>
    </copy>
    <echo message="Done deploying JSPs"/>
  </target>

  <target name="javadoc" description="JavaDoc task. This will create the JavaDoc documentation for the classes in ro.finsiel.eunis.*">
    <mkdir dir="docs"/>
    <mkdir dir="docs/api"/>
    <path id="app_classpath">
      <fileset dir="${3rdpartyDir}">
        <include name="**/*.jar"/>
        <include name="**/*.zip"/>
      </fileset>
      <pathelement path="." />
      <pathelement path="conf"/>
      <pathelement path="${classesSrcDir}"/>
    </path>
    <javadoc sourcepath="src/classes" packagenames="ro.finsiel.eunis.*" destdir="doc/api" author="true" version="true"
      windowtitle="EUNIS Database application" use="true" classpathref="app_classpath">
      <doctitle><![CDATA[<h1>Documentation</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; EEA - European Environment Agency. All Rights Reserved.</i>]]></bottom>
      <tag name="todo" scope="all" description="To do:" />
      <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>
    </javadoc>
  </target>

  <target name="clean" depends="init" description="Clean all files resulted from the build process, including DISTRIBUTION!">
    <echo message="Cleaning project's build directory: ${buildDir}" />
    <delete dir="${buildDir}" verbose="false"/>
    <echo message="Cleaning web application installation build directory: ${buildDir}" />
    <echo message="The following directories will NOT be removed:" />
    <echo message="${deployDir}/downloads/" />
    <echo message="${deployDir}/temp/cache" />
    <echo message="${deployDir}/temp/no-cache" />
    <echo message="${deployDir}/upload/" />
    <echo message="${deployDir}/images/species" />
    <echo message="${deployDir}/images/sites" />
    <echo message="${deployDir}/images/habitats" />

    <delete dir="${deployDir}/css" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/gis" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/reports" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/script" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/sql" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/users" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/gis" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete dir="${deployDir}/WEB-INF" verbose="false" failonerror="false" includeemptydirs="true" />
    <delete verbose="false" failonerror="false" includeemptydirs="true">
      <fileset dir="${deployDir}" >
        <include name="**/*.jsp" />
        <include name="**/*.xml" />
      </fileset>
    </delete>
    <delete verbose="false" failonerror="false" includeemptydirs="true">
      <fileset dir="${deployDir}/images" >
        <exclude name="**/species/*.*" />
        <exclude name="**/habitats/*.*" />
        <exclude name="**/sites/*.*" />
      </fileset>
    </delete>
    <delete verbose="false" failonerror="false" includeemptydirs="true">
      <fileset dir="${deployDir}/temp" >
        <exclude name="**/cache/*.*" />
        <exclude name="**/no-cache/*.*" />
      </fileset>
    </delete>
  </target>
</project>